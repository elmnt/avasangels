/**
 *
 * elmenu | A lightweight jQuery menu system
 *
 */

/*
This was built upon a really great tutorial by Nicholas Cerminara on scotch.io

Credit:
https://scotch.io/tutorials/off-canvas-menus-with-css3-transitions-and-transforms

I built upon it to add:
1. Desktop display of a fairly robust header nav with different link sections and sub-menus
2. Automatic injection of all those nav (and sub-nav) elements into a mobile nav holder
3. Accordion-style drop-down in the mobile nav, with the option to click both the parent link
   (to go to a category page, for instance), and a toggle button to activate that sub-menu (to access the sub-menu links).
*/


/**
 * Variables
 * moved to global/variables.scss
 */


/**
 * This .list-reset class is in my demo Sass partials,
 * but added here, so this partial can be 100% portable.
 */
/*
.list-reset {
  margin: 0;
  padding: 0;
  list-style: none;
}
*/


/**
 * elmenu global font setting
 */
#elmenu,
#elmobile, {}

/**
 * Page structure
 * These are top-level classes, and should appear
 * high in the cascade, to be safe. But since:
 * 1. They don't appear anywhere else
 * 2. IDs have very high specificity
 * It's not an issue. Might be a point to revisit
 * if there are any cascade debugging issues.
 */
#page {
   position: relative; //necessary?
   overflow: hidden;
   width: 100%;
}

#canvas {
   position: relative;
   width: 100%;
   height: 100%;
   -webkit-transform: translateX($canvas-start-position);
   transform: translateX($canvas-start-position);
   -webkit-transition: -webkit-transform .33s cubic-bezier(.694, .0482, .335, 1);
   transition: -webkit-transform .33s cubic-bezier(.694, .0482, .335, 1);
}

#elmobile {
   position: absolute;
   top: 0;
   right: (-1 * $elmenu-elmobile-width);
   width: $elmenu-elmobile-width;
   height: 100%;
   background: $elmenu-background-color;
}

body.show-nav #canvas {
   -webkit-transform: translateX( (-1 * $elmenu-elmobile-width) );
   transform: translateX( (-1 * $elmenu-elmobile-width) );
}

body.show-nav #elmobile {
   // Constrain the menu to the screen width on smaller screens
   max-width: 100%;
   // And add a left border
   border-left: 1px solid white;
}


/**
 * Font sizes for both desktop & mobile menus
 */

/*
.nav--utility .elm__item {
   font-size: $elmenu-utility-font-size;
   line-height: $elmenu-utility-line-height;
   font-weight: $elmenu-utility-font-weight;
}

.nav--utility .m-elm__item {
   font-size: $elmenu-mobile-utility-font-size;
   line-height: $elmenu-mobile-utility-line-height;
   font-weight: $elmenu-mobile-utility-font-weight;
}

.nav--social .elm__item {
   font-size: $elmenu-social-font-size;
   line-height: $elmenu-social-line-height;
   font-weight: $elmenu-social-font-weight;
}

.nav--social .m-elm__item {
   font-size: $elmenu-mobile-social-font-size;
   line-height: $elmenu-mobile-social-line-height;
   font-weight: $elmenu-mobile-social-font-weight;
}
*/

.nav--main .elm__item,
.nav--main .elm__item--sub,
.nav--main .elm__item--subsub {
   font-size: $elmenu-main-font-size;
   line-height: $elmenu-main-line-height;
   font-weight: $elmenu-main-font-weight;
}

.nav--main .m-elm__item,
.nav--main .m-elm__item--sub,
.nav--main .m-elm__item--subsub {
   font-size: $elmenu-mobile-font-size;
   line-height: $elmenu-mobile-line-height;
   font-weight: $elmenu-mobile-font-weight;
}


/**
 * Some header container styles
 * They do not affect the menu system, they just allow us to
 * position & style those individual elements.
 */

/*
These two class settings have been moved to layout/header.scss
to keep the header layout settings above (and separate from)
all the individual elmenu styles.

.navholder--utility {
   display: none;
   @media only screen and (min-width: $elmenu-mobile-breakpoint){
      display: block;
      background-color: $elmenu-navutility-background;
      nav {
         float: left;
         display: inline-block;
      }
      .nav--social {
         float: right;
         display: inline-block;
      }
   }

}

.navholder--main {
   display: none;
   @media only screen and (min-width: $elmenu-mobile-breakpoint){
      display: block;
      background-color: $elmenu-navmain-background;
   }

}

*/


/*
Colors unique to each individual nav element (the ULs)
Applied for both desktop and mobile
*/

/*
.nav--utility {

   .elm__link {
      text-transform: $elmenu-navutility-link-text-transform;
      color: $elmenu-navutility-link-color;
      &:visited {
         color: $elmenu-navutility-link-color;
      }
      &:hover,
      &:active,
      &:focus {
         color: $elmenu-navutility-link-hover-color;
      }
   }

}

.nav--social {

   .elm__link {
      text-transform: $elmenu-navutility-link-text-transform;
      color: $elmenu-navutility-link-color;
      &:visited {
         color: $elmenu-navutility-link-color;
      }
      &:hover,
      &:active,
      &:focus {
         color: $elmenu-navutility-link-hover-color;
      }
   }

}
*/

.nav--main {

   // Level 1 doesn't need background colors
   // UNLESS you want them to be different from the holder BG
   .elm__link {
      color: $elmenu-navmain-link-color;
      &:visited {
         color: $elmenu-navmain-link-color;
      }
      &:hover,
      &:active,
      &:focus {
         color: $elmenu-navmain-link-hover-color;
      }
   }

   // Level 2
   .elm__link--sub {
      color: $elmenu-navmain-sub-color;
      background-color: $elmenu-navmain-sub-background;
      &:visited {
         color: $elmenu-navmain-sub-color;
         background-color: $elmenu-navmain-sub-background;
      }
      &:hover,
      &:active,
      &:focus {
         color: $elmenu-navmain-sub-color;
         background-color: $elmenu-navmain-sub-hover-background;
      }
   }

   // Level 3
   .elm__link--subsub {
      min-width: 200px; // To make up for really short links
      color: $elmenu-navmain-sub-color;
      background-color: $elmenu-navmain-subsub-background;
      &:visited {
         color: $elmenu-navmain-sub-color;
         background-color: $elmenu-navmain-subsub-background;
      }
      &:hover,
      &:active,
      &:focus {
         color: $elmenu-navmain-sub-color;
         background-color: $elmenu-navmain-subsub-hover-background;
      }
   }

   // And keep the hover BG color on the --sub level,
   // When we're hovering on the --subsub level (below)
   .elm__item--sub:hover > a {
       background-color: $elmenu-navmain-sub-hover-background;
   }

}


/*
SHOW THE MOBILE MENU (slide it in)
Attach the .show-nav class to the body tag (with jQuery), so we have the option
to manipulate more page elements when the menu is open.
*/

/*
These two class settings have been moved to layout/header.scss
to keep the header layout settings above (and separate from)
all the individual elmenu styles.

.elmtoggle__holder,
.elmtoggle__holder--mobile {
   display: block;
   width: 100%;
   text-align: right;
   padding: 1rem 1rem .75rem 1rem;
   border-bottom: 1px solid white;
}

.elmtoggle__holder {
   background-color: $elmenu-toggle-holder-background-color;
}

.elmtoggle__holder--mobile {
   background-color: $elmenu-mobile-toggle-holder-background-color;
}

// We only need to hide the toggle holder that replaces the desktop nav
// It's fine if we leave the mobile (close) toggler alone. It's going to hide
// with the mobile nav at the appropriate size.
.elmtoggle__holder {
   @media only screen and (min-width: $elmenu-mobile-breakpoint){
      display: none;
   }
   a {
      text-decoration: none;
   }
}

// Control the icon size (both desktop & mobile)
.elmtoggle__icon {
   width: auto;
   height: 1.5rem;
   display: inline-block;
   vertical-align: top;
}

*/


/**
 * --------------------------------- The header (desktop view) menu styles
 */

// ----------- Level 1

.elm__list {
   @extend .list-reset;
}
.elm__item {
   display: inline-block;

   // Make the last link look like a button
   &:last-of-type .elm__link {
      @extend .button;
      margin-left: 1.5rem;
   }

}
.elm__link {
   display: block;
   padding: $elmenu-navmain-link-padding;
   text-decoration: none;
}

// ----------- Level 2

.elm__list--sub {
   @extend .list-reset;
}
.elm__link--sub {
   display: block;
   padding: $elmenu-navmain-link-padding;
   text-decoration: none;
}

// Level 2: Display

.elm__list--sub {
   display: none;
   text-align: left;
}
.elm__item.hassub:hover .elm__list--sub {
   display: block;
}

// Level 2: Position

.elm__item.hassub {
   position: relative;
}
.elm__item.hassub .elm__list--sub {
   position: absolute;
   top: 100%;
   left: 0;
   width: auto;
}

// Level 2: Style

.elm__item--sub {
   width: 100%;
}
.elm__link--sub {
   display: block;
   padding: $elmenu-navmain-link-padding;
   white-space: nowrap;
}

// ----------- Level 3

.elm__list--subsub {
   @extend .list-reset;
}
.elm__link--subsub {
   display: block;
   padding: $elmenu-navmain-link-padding;
   text-decoration: none;
}

// Level 3: Display

.elm__list--subsub {
   display: none;
   text-align: left;
}
.elm__item--sub.hassubsub:hover .elm__list--subsub {
   display: block;
}

// Level 3: Position

.elm__item--sub.hassubsub {
   position: relative;
}
.elm__item--sub.hassubsub .elm__list--subsub {
   position: absolute;
   top: 0;
   left: 100%;
   width: auto;
}

// Level 3: Style

.elm__item--subsub {
   width: 100%;
}
.elm__link--subsub {
   display: block;
   padding: $elmenu-navmain-link-padding;
   white-space: nowrap;
}


/**
 * --------------------------------- The mobile menu styles
 */

.m-elm__list,
.m-elm__list--sub,
.m-elm__list--subsub {
   list-style: none;
   text-align: left;
   padding-left: 0;
}

.m-elm__link,
.m-elm__link--sub,
.m-elm__link--subsub {
   color: white;
   &:visited {
      color: white;
   }
   &:hover,
   &:active,
   &:focus {
      color: white;
   }
}

// ----------- Level 1

.m-elm__list {
   display: block;
   margin: 0;
   border-bottom: 1px solid white;
}
.m-elm__item {
   border-bottom: 1px solid white;
   &:last-of-type {
      border-bottom: none;
   }
}
.m-elm__link {
   display: block;
   padding: .85rem 1rem;
   text-decoration: none;
}

// ----------- Level 2

.m-elm__list--sub {
   display: none;
   margin: 0;
}
.m-elm__item--sub {
   border-bottom: 1px solid white;
   &:first-of-type {
      border-top: 1px solid white;
   }
   &:last-of-type {
      border-bottom: none;
   }
}
.m-elm__link--sub {
   display: block;
   padding: .85rem 1rem;
   text-decoration: none;
   border-left: 10px solid $elmenu-mobile-subnav-toggle-background-color;
}

// ----------- Level 3

.m-elm__list--subsub {
   display: none;
   margin: 0;
}
.m-elm__item--subsub {
   border-bottom: 1px solid white;
   &:first-of-type {
      border-top: 1px solid white;
   }
   &:last-of-type {
      border-bottom: none;
   }
}
.m-elm__link--subsub {
   display: block;
   padding: .85rem 1rem;
   text-decoration: none;
   border-left: 20px solid $elmenu-mobile-subnav-toggle-background-color;
}

// ----------- the span trigger

// ----------- EDITS

/**
 * Changing the elmtrigger class to reflect the updates to elmenu.js
 * We're dynamically creating a new node for each toggle element,
 * so they'll have unique classes. Otherwise, when clicking on ANY of them,
 * they will ALL spin (because they had the same dynamically generated node + class).
 * For instance: If there are TWO parent menu items with children, the toggle nodes are:
 * <span class="elmtrigger-1"><img src="/wp-content/themes/ava/img/arrow-down.svg" alt="Open Sub Menu"></span>
 * <span class="elmtrigger-2"><img src="/wp-content/themes/ava/img/arrow-down.svg" alt="Open Sub Menu"></span>
 * ...and so on, for more nodes
 *
 * So all instances of 'elmntrigger' below must be changed to [class^="elmtrigger"]
 *
 */

/*
.elmtrigger,
.elmtrigger--sub {
   cursor: pointer;
   text-align: center;
   margin: 0;
   padding: 0;
}
*/
// This covers both parent and --sub
[class^="elmtrigger"] {
   cursor: pointer;
   text-align: center;
   margin: 0;
   padding: 0;
}

// the SVG
/*
.elmtrigger img,
.elmtrigger--sub img {
   margin: 0 auto;
   padding: 0;
   display: inline-block;
   vertical-align: middle;
   width: auto;
   height: .75rem;
   -ms-transform: rotate(0deg);
   -webkit-transform: rotate(0deg);
   transform: rotate(0deg);
}
*/
// This covers both parent and --sub
[class^="elmtrigger"] img {
   margin: 0 auto;
   padding: 0;
   display: inline-block;
   vertical-align: middle;
   width: auto;
   height: .75rem;
   -ms-transform: rotate(0deg);
   -webkit-transform: rotate(0deg);
   transform: rotate(0deg);
}

/*
.elmtrigger img.rotate,
.elmtrigger--sub img.rotate {
   -ms-transform: rotate(180deg);
   -webkit-transform: rotate(180deg);
   transform: rotate(180deg);
   -webkit-animation:spin 4s linear infinite;
   -moz-animation:spin 4s linear infinite;
   animation:spin 4s linear infinite;
}
*/
// This covers both parent and --sub
[class^="elmtrigger"] img.rotate {
   -ms-transform: rotate(180deg);
   -webkit-transform: rotate(180deg);
   transform: rotate(180deg);
   -webkit-animation:spin 4s linear infinite;
   -moz-animation:spin 4s linear infinite;
   animation:spin 4s linear infinite;
}

// ----------- Some specific styles to handle mobile links with subs

/*
Put a background color on the LI that has a sub-nav toggle.
This creates the appearance of a unique BG color on the span (the sub-nav toggle trigger)
*/

// BG on the level 1 li (carries into the span)
.m-elm__item.hassub {
   background-color: $elmenu-mobile-subnav-toggle-background-color;
}
// Then 'reset' the link's BG color. The span still has the BG color of the li
.m-elm__item.hassub a {
   background-color: $aa-color-2;
}

// BG on the level 1 li (carries into the span)
.m-elm__item--sub.hassubsub {
   background-color: $elmenu-mobile-subnav-toggle-background-color;
}
// Then 'reset' the link's BG color. The span still has the BG color of the li
.m-elm__item--sub.hassubsub a,
.m-elm__link--sub {
   background-color: $aa-color-2;
}

.m-elm__item--subsub,
.m-elm__link--subsub {
   background-color: $aa-color-3;
}

.hassub .m-elm__link,
.hassub .m-elm__link--sub,
.hassub .m-elm__link--subsub {// excludes the span
   border-right: 1px solid white !important;
}

// fit the links and triggers on one line and space them
/*
.hassub .m-elm__link,
.elmtrigger,
.m-elm__item--sub.hassub .m-elm__link--sub,
.elmtrigger--sub {
   display: inline-block;
}
*/
// This covers both parent and --sub
.hassub .m-elm__link,
.m-elm__item--sub.hassub .m-elm__link--sub,
[class^="elmtrigger"] {
   display: inline-block;
}

.hassub .m-elm__link,
.hassubsub .m-elm__link--sub {
   display: inline-block;
   width: 80%;
}

/*
.elmtrigger,
.elmtrigger--sub {
   display: inline-block;
   width: 20%;
   text-align: center;
}
*/
// This covers both parent and --sub
[class^="elmtrigger"] {
   display: inline-block;
   width: 20%;
   text-align: center;
}
